openapi: 3.0.0
info:
  title: URL Shortener API
  description: API documentation.
  version: 1.0.0

tags:
  name: Urls
  description: Url management

paths:
  /api/url:
    post:
      summary: Create a short url.
      tags: [Urls]
      consumes:
        - application/json
      requestBody:
        description: Create url request object.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlRequest'
            examples:
              randomSlug:
                summary: Random slug generated
                value:
                  url:
                    $ref: '#/components/examples/exampleUrl'
              withSlug:
                summary: Custom slug generated
                value:
                  url:
                    $ref: '#/components/examples/exampleUrl'
                  slug:
                    $ref: '#/components/examples/exampleSlug'
      responses:
        '201':
          description: An object with the slug and the url.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlResponse'
          links:
            Link GET /{slug}:
              operationId: getSlug
              parameters:
                slug: '$response.body#/slug'

              description: >
                The `slug` value returned in the response can be used as
                the `slug` parameter in `GET /{slug}`.
                (See [endpoint](#/Urls/getSlug))

        '400':
          $ref: '#/components/responses/400_BadRequest'
        '500':
          $ref: '#/components/responses/500_ServerError'

  /api/url/{slug}:
    get:
      summary: Redirect to url.
      operationId: getSlug
      tags: [Urls]
      consumes:
        - application/json
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
          examples:
            not-existing:
              summary: Not existing slug
              value: not-existing
            existing:
              summary: Existing slug
              value:
                $ref: '#/components/examples/exampleSlug'
      responses:
        '200':
          description: An object with the slug and the url.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlResponse'
        '302':
          description: Server has redirected to url.
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_ServerError'

components:
  schemas:
    UrlRequest:
      type: object
      required:
        - url
      properties:
        url:
          type: string
        slug:
          type: string

    UrlResponse:
      type: object
      properties:
        slug:
          type: string
          example:
            $ref: '#/components/examples/exampleSlug'
        url:
          type: string
          example:
            $ref: '#/components/examples/exampleUrl'

  examples:
    exampleSlug: example
    exampleUrl: https://example.com

  responses:
    400_BadRequest:
      description: Bad request error.
    404_NotFound:
      description: Not found error.
    500_ServerError:
      description: Internal server error
